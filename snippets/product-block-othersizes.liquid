{% liquid
  if section.settings.collection == blank
    assign products = section.settings.products
  else
    assign products = collections[section.settings.collection].products
  endif
%}

{% liquid 
  assign block = section.blocks | where: 'type', 'othersizes' | first
%}

{% capture empty_state %}
  {% unless request.page_type == 'product' %}
    {% for num in (1..section.settings.limit) %}
      <div class="swiper-slide p-4 p-desktop-5">
        <div class="product-card text-center">
          {% capture current %}{% cycle 1, 2, 3, 4, 5, 6 %}{% endcapture %}
          {{ 'product-' | append: current | placeholder_svg_tag: 'product-card-img img-thumbnail mb-4' }}
          <h3 class="product-card-title h6 mb-1">
            Product {{ current }}
          </h3>
          <p class="mb-0">
            $19.99
          </p>
        </div>
      </div>
    {% endfor %}
  {% endunless %}
{% endcapture %}

{% if section.settings.recommended_mode and request.page_type == 'product' %}
<script>
  async function initProductRecommendations ()  {
    const sectionId = '{{ section.id }}'
    const baseUrl = '{{ routes.product_recommendations_url }}'
    const productId = {{ product.id }}
    const limit = {{ section.settings.limit }}
    const intent = '{{ section.settings.recommended_mode_intent }}'
    
    const url = `${baseUrl}?section_id=${sectionId}&product_id=${productId}&limit=${limit}&intent=${intent}`

    const response = await fetch(url)
    const data = await response.text()

    // console.log(url)
    // console.log(data)

    document.querySelector('#featured-products-{{ section.id }}')
      .closest('.shopify-section').outerHTML = data
  }

  window.addEventListener('DOMContentLoaded', () => {
    initProductRecommendations()
  })

  document.addEventListener('shopify:section:load', (e) => {
    if (e.target.querySelector('.featured-products')) {
      initProductRecommendations()
    }
  })  
</script>
{% endif %}

<swiper-slider
  id="featured-products-{{ section.id }}" 
  class="
    featured-products swiper-slider
    {{ section.settings.bg_color }} 
    {{ section.settings.bg_gradient }}
    {{ section.settings.text_color }}
    {{ section.settings.border_top_width | prepend: 'border-top-' }}
    {{ section.settings.border_bottom_width | prepend: 'border-bottom-' }}
    {{ section.settings.border_color }} 
    {{ section.settings.pt | prepend: 'pt-' }} 
    {{ section.settings.pb | prepend: 'pb-' }}
  "
  style="
    --bs-bg-opacity: {{ section.settings.bg_opacity | append: '%' }};
    --bs-border-opacity: {{ section.settings.border_opacity | append: '%' }};
  "
  data-section-id="{{ section.id }}"
  data-slider-speed="{{ section.settings.slider_speed }}"
  data-slider-navigation="{{ section.settings.slider_navigation }}"
  data-slider-pagination="{{ section.settings.slider_pagination }}"
  data-slider-scrollbar="{{ section.settings.slider_scrollbar }}"
  data-slider-autoplay="{{ section.settings.slider_autoplay }}"
  data-breakpoint-mobile="{{ section.settings.breakpoint_mobile }}"
  data-breakpoint-tablet="{{ section.settings.breakpoint_tablet }}"
  data-breakpoint-desktop="{{ section.settings.breakpoint_desktop }}">
  <div 
    class="container"
    style="max-width: {{ section.settings.container_max_width | append: 'px' }};">
    {% render 'section-header' %}
    <div class="swiper mx-n4 mx-desktop-n5 mt-n3 mt-desktop-n5">
      <div class="swiper-wrapper">
        {% if section.settings.recommended_mode and request.path contains 'recommendations' %}
          {% for product in recommendations.products %}
            <div class="swiper-slide p-4 p-desktop-5">
              {% render 'product-card', product: product %}
            </div>
          {% endfor %}
        {% elsif products == blank %}
          {{ empty_state }}
        {% else %}
          {% for product in products limit: section.settings.limit %} 
            <div class="swiper-slide p-4 p-desktop-5">
              {% render 'product-card', product: product %}
            </div>
          {% endfor %}
        {% endif %}
      </div>
      <div class="swiper-controls">
        <div class="swiper-pagination"></div>
        <div class="swiper-scrollbar"></div>
        <div class="swiper-button-prev">
          {% render 'svg-icons', icon: 'chevron-left', size: 24 %}
        </div>
        <div class="swiper-button-next">
          {% render 'svg-icons', icon: 'chevron-right', size: 24 %}
        </div>
      </div>
    </div>
  </div>
</swiper-slider>