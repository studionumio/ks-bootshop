<div class="related-products">
<div id="product-recommendations-container">
  <h6>Other Sizes:</h6>
  <ul id="product-recommendations-list" class="list"></ul>
  <div id="no-recommendations" style="display: none;">
    <p>No related products found. Check out some of our other popular products:</p>
    <ul>
      {% for product in collections['your-fallback-collection'].products limit: 5 %}
        <li><a href="{{ product.url }}">{{ product.metafields.custom.size.value }}</a></li>
      {% endfor %}
    </ul>
  </div>
</div>
</div>

<script>
  async function fetchProductRecommendations() {
    const baseUrl = '/recommendations/products.json'; // Shopify's recommendation API in JSON format
    const productId = {{ product.id }}; // Current product ID
    const limit = 4; // Number of recommended products to show
    const intent = 'related'; // Recommendation intent (can also be 'complementary')

    const url = `${baseUrl}?product_id=${productId}&limit=${limit}&intent=${intent}`;
    
    try {
      const response = await fetch(url);
      const data = await response.json(); // Parse JSON response

      // Log the full API response for debugging
      console.log('API response:', data);

      if (data && data.products && data.products.length > 0) {
        const recommendationsList = document.getElementById('product-recommendations-list');
        
        // Display recommended products as a list of links
        data.products.forEach(product => {
          // Log each product to check for metafields
          console.log('Product:', product);

          // Check for custom.size metafield
          const customSize = product.metafields && product.metafields.custom && product.metafields.custom.size 
              ? product.metafields.custom.size.value 
              : product.title; // Fallback to product.title if metafield not found
          
          const productHtml = `<li><a href="${product.url}">${customSize}</a></li>`;
          
          recommendationsList.innerHTML += productHtml;
        });
      } else {
        // Show fallback content if no recommendations
        document.getElementById('no-recommendations').style.display = 'block';
      }
    } catch (error) {
      console.error('Failed to load product recommendations:', error);
    }
  }

  document.addEventListener('DOMContentLoaded', fetchProductRecommendations);
</script>


<style>


  /* Simple styling for list of links */
  ul.list {
    list-style-type: none;
    padding-left: 0;
  }
  ul.list li {
    margin-bottom: 10px;
  }
  ul.list li a {
    text-decoration: none;
    color: #000;
  }
  ul.list li a:hover {
    text-decoration: underline;
  }
</style>
